# Generated by Django 3.1.5 on 2021-02-14 17:52

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=40, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=30)),
                ('last_name', models.CharField(blank=True, max_length=30)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Cnn_Model',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Composition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='KPI',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('kd_name', models.CharField(default='None', max_length=80)),
                ('rezeptur', models.CharField(max_length=80)),
                ('material', models.CharField(max_length=80)),
                ('polymer', models.CharField(max_length=20)),
                ('dicke', models.FloatField()),
                ('menge', models.FloatField()),
                ('yields', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Machine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=70, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Measurements',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('rollenNumber', models.IntegerField()),
                ('value', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Parameter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('definition_id', models.IntegerField(blank=True, null=True)),
                ('position', models.CharField(choices=[('Control', 'Control'), ('Quality', 'Quality')], default='Quality', max_length=10)),
            ],
        ),
        migrations.AddConstraint(
            model_name='parameter',
            constraint=models.UniqueConstraint(fields=('definition_id', 'name'), name='definition_id_and_parameter_name_constraint'),
        ),
        migrations.AddField(
            model_name='measurements',
            name='composition',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataanalysis.composition'),
        ),
        migrations.AddField(
            model_name='measurements',
            name='machine',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataanalysis.machine'),
        ),
        migrations.AddField(
            model_name='measurements',
            name='order',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataanalysis.order'),
        ),
        migrations.AddField(
            model_name='measurements',
            name='parameter',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataanalysis.parameter'),
        ),
        migrations.AddField(
            model_name='kpi',
            name='werk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataanalysis.machine'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AddIndex(
            model_name='measurements',
            index=models.Index(fields=['date'], name='dataanalysi_date_c5875d_idx'),
        ),
    ]
